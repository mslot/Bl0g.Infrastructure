stages:
- stage: Build
  variables:
  - group: Bl0g.Infrastructure.Build
  jobs:
  - job: BuildJob
    pool:
        vmImage: 'windows-latest'
    steps:
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Build.ARM.Source.Path)
        Contents: '**\*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        
- stage: DeployProduction
  variables:
    - group: Bl0g
    - group: Bl0g.Infrastructure.Bootstrap.Release
    - group: Bl0g.Production
    - name: "TEMPLATE_STORAGE_NAME"
      value: "$(Blog.Prefix)$(Release.Template.Storage.Name)$(Env)"
    - name: "RESOURCE_GROUP_NAME"
      value: "$(Blog.Prefix)-$(ResourceGroup.Name)-rg"
  jobs:
  - deployment: DeployResources
    pool:
        vmImage: 'windows-latest'
    environment: 'blog-deployment-production'
    strategy:
        runOnce:
            deploy:
                steps:
                - task: AzureResourceGroupDeployment@2
                  inputs:
                    azureSubscription: 'blog-connection'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: $(RESOURCE_GROUP_NAME)
                    location: $(Release.Location)
                    templateLocation: 'Linked artifact'
                    csmFile: '$(Release.Template.Path)'
                    csmParametersFile: '$(Release.Template.Parameters.Path)'
                    overrideParameters: '-storagename "$(TEMPLATE_STORAGE_NAME)"'
                    deploymentMode: 'Incremental'
                - task: AzureFileCopy@3
                  inputs:
                    SourcePath: '$(Release.Template.Arm.Source.Path)'
                    azureSubscription: 'blog-connection'
                    Destination: 'AzureBlob'
                    storage: '$(TEMPLATE_STORAGE_NAME)'
                    ContainerName: 'arm'
                    outputStorageUri: 'ArmStorageUri'
                    outputStorageContainerSasToken: 'ArmStorageSasToken'
                    sasTokenTimeOutInMinutes: '10'
                - task: AzureResourceGroupDeployment@2
                  inputs:
                    azureSubscription: 'blog-connection'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: '$(RESOURCE_GROUP_NAME)'
                    location: '$(Release.Location)'
                    templateLocation: 'URL of the file'
                    csmFileLink: '$(ArmStorageUri)environmental.resources.template.json$(ArmStorageSasToken)'
                    csmParametersFileLink: '$(ArmStorageUri)environmental.resources.template.parameters.json$(ArmStorageSasToken)'
                    overrideParameters: '-mssqlPrefix "$(Blog.Prefix)" -env "$(Env)" -storageSasToken "$(ArmStorageSasToken)" -storageUri "$(ArmStorageUri)" -mssqlAdminLogin "$(Database.Login)" -mssqlAdminPassword "$(Database.Password)"'
                    deploymentMode: 'Incremental'
                - task: AzureResourceGroupDeployment@2
                  inputs:
                    azureSubscription: 'blog-connection'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: '$(RESOURCE_GROUP_NAME)'
                    location: '$(Release.Location)'
                    templateLocation: 'URL of the file'
                    csmFileLink: '$(ArmStorageUri)cluster.template.json$(ArmStorageSasToken)'
                    csmParametersFileLink: '$(ArmStorageUri)cluster.template.parameters.json$(ArmStorageSasToken)'
                    overrideParameters: '-clusterPrefix "$(Blog.Prefix)" -servicePrincipalClientSecret "$(Cluster.ServicePrincipalClientSecret)" -servicePrincipalClientId "$(Cluster.ServicePrincipalClientId)" -sshRSAPublicKey "$(Cluster.SshRSAPublicKey)" -linuxAdminUsername "$(Cluster.AdminUsername)" -dnsPrefix "$(Cluster.DnsPrefix)" -clusterName "$(Cluster.Name)" -storageSasToken "$(ArmStorageSasToken)" -storageUri "$(ArmStorageUri)"'
                    deploymentMode: 'Incremental'
